<Window x:Class="StockSharp.Hydra.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
		xmlns:hydra="clr-namespace:StockSharp.Hydra"
		xmlns:ex="clr-namespace:Ecng.Xaml;assembly=Ecng.Xaml" 
		xmlns:core="clr-namespace:StockSharp.Hydra.Core;assembly=StockSharp.Hydra.Core" 
		xmlns:sx="clr-namespace:StockSharp.Xaml;assembly=StockSharp.Xaml"
		xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:controls1="clr-namespace:wyDay.Controls;assembly=AutomaticUpdaterWPF"
		xmlns:navigation="clr-namespace:ActiproSoftware.Windows.Controls.Navigation;assembly=ActiproSoftware.Navigation.Wpf"
		xmlns:docking="clr-namespace:ActiproSoftware.Windows.Controls.Docking;assembly=ActiproSoftware.Docking.Wpf"
		xmlns:views="clr-namespace:ActiproSoftware.Windows.Controls.Views;assembly=ActiproSoftware.Views.Wpf"
		xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:converters="clr-namespace:Ecng.Xaml.Converters;assembly=Ecng.Xaml"
        Loaded="MainWindowLoaded" DataContext="{Binding RelativeSource={RelativeSource Self}}"
		Title="S#.Data" Height="516" Width="1376" WindowState="Normal">

	<Window.CommandBindings>
		<CommandBinding Command="{x:Static hydra:MainWindow.TaskEnabledChangedCommand}"
					Executed="ExecutedTaskEnabledChangedCommand"
					CanExecute="CanExecuteTaskEnabledChangedCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.RemoveTaskCommand}"
					Executed="ExecutedRemoveTaskCommand"
					CanExecute="CanExecuteRemoveTaskCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.EditTaskSettingsCommand}"
					Executed="ExecutedEditTaskSettingsCommand"
					CanExecute="CanExecuteEditTaskSettingsCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.OpenLogCommand}"
					Executed="ExecutedOpenLogCommand" />
		
		<CommandBinding Command="{x:Static hydra:MainWindow.TargetPlatformCommand}"
					Executed="ExecutedTargetPlatformCommand" />
		
		<CommandBinding Command="{x:Static hydra:MainWindow.HelpCommand}"
					Executed="ExecutedHelpCommand" />
		
		<CommandBinding Command="{x:Static hydra:MainWindow.AboutCommand}"
					Executed="ExecutedAboutCommand" />
		
		<CommandBinding Command="{x:Static hydra:MainWindow.LogDirectoryCommand}"
					Executed="ExecutedLogDirectoryCommand" />
		
		<CommandBinding Command="{x:Static hydra:MainWindow.CopyToBufferCommand}"
					Executed="ExecutedCopyToBufferCommand"
					CanExecute="CanExecuteCopyToBufferCommand" />
		
		<CommandBinding Command="Close" 
					Executed="ExecutedExit" />

		<CommandBinding Command="{x:Static hydra:MainWindow.OpenPaneCommand}"
					Executed="ExecutedOpenPaneCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.ImportPaneCommand}"
					Executed="ExecutedImportPaneCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.AnalyticsCommand}"
					Executed="ExecutedAnalyticsCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.BoardsCommand}"
					Executed="ExecutedBoardsCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.MemoryStatisticsCommand}"
					Executed="ExecutedMemoryStatisticsCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.AddSourcesCommand}"
					Executed="ExecutedAddSourcesCommand" />

		<CommandBinding Command="{x:Static hydra:MainWindow.AddToolsCommand}"
					Executed="ExecutedAddToolsCommand" />
	</Window.CommandBindings>

	<Window.Resources>
		<converters:BoolToOpacityConverter x:Key="BoolToOpacityConverter"/>
		<converters:InverseBooleanConverter x:Key="BoolToOppositeConverter"/>
		<converters:MultiBoolToOpacityConverter x:Key="MultiBoolToOpacityConverter"/>
		<converters:NullImageConverter x:Key="NullImageConverter"/>
		
		<LinearGradientBrush x:Key="CheckedBlue" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="#FF285AB3" Offset="0" />
			<GradientStop Color="#FF4184EC" Offset="0.5" />
			<GradientStop Color="#FF558BED" Offset="0.5" />
			<GradientStop Color="#FF7DACF0" Offset="1" />
		</LinearGradientBrush>
		<SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
		<Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnChecking">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="30" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnUnchecking">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<DockPanel x:Name="dockPanel">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
							<Grid>
								<Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="20" Width="60">
									<Border.Background>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
											<GradientStop Color="#FFB5B5B5" Offset="0" />
											<GradientStop Color="#FFDEDEDE" Offset="0.1" />
											<GradientStop Color="#FFEEEEEE" Offset="0.5" />
											<GradientStop Color="#FFFAFAFA" Offset="0.5" />
											<GradientStop Color="#FFFEFEFE" Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>
										<Ellipse x:Name="Off" Width="10" Height="10" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
										<Line x:Name="On" X1="0" Y1="2" X2="0" Y2="10" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
									</Grid>
								</Border>
								<Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="30" Height="20" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="1" ScaleY="1" />
											<SkewTransform AngleX="0" AngleY="0" />
											<RotateTransform Angle="0" />
											<TranslateTransform X="0" Y="0" />
										</TransformGroup>
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
											<GradientStop Color="#FFF0F0F0" Offset="0" />
											<GradientStop Color="#FFCDCDCD" Offset="0.1" />
											<GradientStop Color="#FFFBFBFB" Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Trigger.ExitActions>
									<BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
								</Trigger.EnterActions>
								<Setter TargetName="On" Property="Stroke" Value="White" />
								<Setter TargetName="Off" Property="Stroke" Value="White" />
								<!-- Change Orange or Blue color here -->
								<Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedBlue}" />
								<Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedBlueBorder}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<!-- ToDo: Add Style for Isenabled == False -->
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="ToggleButton" x:Key="ToggleButtonStyle">
			<Style.Resources>
				<SolidColorBrush x:Key="ControlForeground" Color="#FF202020" />
				<SolidColorBrush x:Key="DisabledBorderBrush" Color="#66000000" />
				<SolidColorBrush x:Key="ControlHighlight" Color="#80FFFFFF" />
				<SolidColorBrush x:Key="FocusVisualBrush" Color="#00000000" />

				<LinearGradientBrush x:Key="DisabledBrush" EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF9C9DA0" />
					<GradientStop Color="#FF8B8C8E" Offset="1" />
				</LinearGradientBrush>

				<LinearGradientBrush x:Key="ControlBackgroundNormal" EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA0BB0E" Offset="0.176" />
					<GradientStop Color="#FF6D9700" Offset="0.894" />
				</LinearGradientBrush>

				<LinearGradientBrush x:Key="ControlBackgroundOver" EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFAECC07" Offset="0.228" />
					<GradientStop Color="#FF83B100" Offset="0.849" />
				</LinearGradientBrush>

				<Color x:Key="ColorForegroundShadowColor">#FFDEDEDE</Color>
				<DropShadowEffect x:Key="ControlShadowEffect" BlurRadius="1" Color="#000000" Direction="-90" Opacity="0.55" ShadowDepth="1" />
			</Style.Resources>
			<Setter Property="Padding" Value="18,6" />
			<Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Grid x:Name="Root">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1" />
										<VisualTransition To="Pressed" />
										<VisualTransition From="Pressed" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
											<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
											<DoubleAnimation Duration="0" Storyboard.TargetName="HighlightElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.5" />
											<DoubleAnimation Duration="0" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.75" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalElement" />
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightElement" />
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedElement" />

											<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
											</ObjectAnimationUsingKeyFrames>-->
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked" />
									<VisualState x:Name="Indeterminate" />
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border x:Name="DisabledElement" Background="{StaticResource DisabledBrush}" CornerRadius="2" Opacity="0">
								<Border BorderBrush="{StaticResource DisabledBorderBrush}" BorderThickness="0,0,1,1" CornerRadius="2" />
							</Border>
							<Border x:Name="NormalElement" Background="{StaticResource ControlBackgroundNormal}" CornerRadius="2" Effect="{StaticResource ControlShadowEffect}" />
							<Border x:Name="CheckedElement" CornerRadius="2.5" BorderBrush="#D0494a4d" BorderThickness="1" Margin="0,-1,0,-1" Opacity="0" Background="{StaticResource ControlBackgroundNormal}">
								<Border BorderBrush="#70303030" BorderThickness="1,1,0,0" CornerRadius="2">
									<Border BorderBrush="#30303030" BorderThickness="1" CornerRadius="1.5">
										<Border BorderBrush="#10303030" BorderThickness="1,1,0,0" CornerRadius="1" />
									</Border>
								</Border>
							</Border>
							<Border x:Name="MouseOverElement" Background="{StaticResource ControlBackgroundOver}" CornerRadius="2" Opacity="0" />
							<Border x:Name="HighlightElement" BorderBrush="{StaticResource ControlHighlight}" BorderThickness="1,1,0,0" CornerRadius="2" />

							<ContentPresenter x:Name="ContentHost" Margin="{TemplateBinding Padding}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.Effect>
									<DropShadowEffect Color="{StaticResource ColorForegroundShadowColor}" Direction="-90" BlurRadius="1" ShadowDepth="1" Opacity="0.5" />
								</ContentPresenter.Effect>
							</ContentPresenter>

							<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusX="1" RadiusY="1" 
									   Stroke="{StaticResource FocusVisualBrush}" StrokeThickness="1" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="TaskListViewItemStyle" TargetType="ListViewItem">
			<Style.Resources>
				<converters:BoolToBrushConverter x:Key="BoolToBackground" FalseBrushValue="White" TrueBrushValue="#f8ce53"/>
				<converters:BoolToBrushConverter x:Key="BoolToBorder" FalseBrushValue="#D0D0D0" TrueBrushValue="#f8ce53"/>
			</Style.Resources>

			<Setter Property="Background" Value="{Binding Path=(core:IHydraTask.Settings).IsEnabled, Converter={StaticResource BoolToBackground}}"/>
			<Setter Property="BorderBrush" Value="{Binding Path=(core:IHydraTask.Settings).IsEnabled, Converter={StaticResource BoolToBorder}}" />
			<Setter Property="BorderThickness" Value="3" />
			<Setter Property="Margin" Value="2" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
						<Border x:Name="border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="3">
							<StackPanel Margin="5">
								<StackPanel Orientation="Horizontal">
									<ex:BmpImage Source="{Binding Path=(core:IHydraTask.Icon), Converter={StaticResource NullImageConverter}}" VerticalAlignment="Center" />
									<TextBlock FontWeight="Bold" Text="{Binding Path=(core:IHydraTask.Settings).Title}" VerticalAlignment="Center" Margin="5,0,0,0" />
								</StackPanel>

								<StackPanel Orientation="Horizontal" x:Name="buttons" Visibility="Collapsed" Margin="0,3,0,0">
									<Button Margin="3" Padding="0" BorderBrush="{x:Null}" Name="btnSettings" Focusable="False" Background="Transparent"
											Command="{x:Static hydra:MainWindow.EditTaskSettingsCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}">
										<Button.Opacity>
											<MultiBinding Converter="{StaticResource MultiBoolToOpacityConverter}" ConverterParameter="true">
												<Binding Path="IsStarted" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type hydra:MainWindow}}"/>
												<Binding Path="Settings.IsEnabled"/>
											</MultiBinding>
										</Button.Opacity>
										
										<Button.Content>
											<ex:BmpImage Source="pack://application:,,,/StockSharp.Xaml;component/Images/edit_24x24.png" ToolTip="{x:Static loc:LocalizedStrings.XamlStr412}" />
										</Button.Content>
									</Button>

									<CheckBox Style="{StaticResource OrangeSwitchStyle}" Margin="3" IsChecked="{Binding Settings.IsEnabled}" DockPanel.Dock="Right"
											  Opacity="{Binding Path=IsStarted, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type hydra:MainWindow}}, Converter={StaticResource BoolToOpacityConverter}, ConverterParameter=true}"
											  Command="{x:Static hydra:MainWindow.TaskEnabledChangedCommand}"
											  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" />

									<Button Background="Transparent" Margin="3" Padding="0" BorderBrush="{x:Null}" Name="btnClose" Focusable="False"
											Command="{x:Static hydra:MainWindow.RemoveTaskCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}">
										<Button.Opacity>
											<MultiBinding Converter="{StaticResource MultiBoolToOpacityConverter}" ConverterParameter="true">
												<Binding Path="IsStarted" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type hydra:MainWindow}}"/>
												<Binding Path="Settings.IsEnabled"/>
											</MultiBinding>
										</Button.Opacity>
										
										<Button.Content>
											<ex:BmpImage Source="Images\Close.png" ToolTip="{x:Static loc:LocalizedStrings.XamlStr787}" x:Name="imgClose" />
										</Button.Content>
									</Button>
								</StackPanel>
							</StackPanel>
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="#f8ce53" />
								<Setter TargetName="buttons" Property="Visibility" Value="Visible" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<EventSetter Event="MouseDoubleClick" Handler="CurrentTasks_OnSelectionItemDoubleClick"/>
		</Style>

		<ex:AutoRefreshCollectionViewSource Source="{Binding Path=Tasks}" x:Key="SortedSources" Filter="SortedSources_OnFilter">
			<ex:AutoRefreshCollectionViewSource.SortDescriptions>
				<componentModel:SortDescription PropertyName="Settings.IsEnabled" Direction="Descending"/>
			</ex:AutoRefreshCollectionViewSource.SortDescriptions>
		</ex:AutoRefreshCollectionViewSource>

		<ex:AutoRefreshCollectionViewSource Source="{Binding Path=Tasks}" x:Key="SortedTools" Filter="SortedTools_OnFilter">
			<ex:AutoRefreshCollectionViewSource.SortDescriptions>
				<componentModel:SortDescription PropertyName="Settings.IsEnabled" Direction="Descending"/>
			</ex:AutoRefreshCollectionViewSource.SortDescriptions>
		</ex:AutoRefreshCollectionViewSource>
	</Window.Resources>

	<xctk:BusyIndicator Name="BusyIndicator">
		<DockPanel LastChildFill="True">
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="{x:Static loc:LocalizedStrings.File}">
					<MenuItem Command="{x:Static hydra:MainWindow.AddSourcesCommand}">
						<MenuItem.Header>
							<TextBlock><Run Text="{x:Static loc:LocalizedStrings.XamlStr140}"/>...</TextBlock>
						</MenuItem.Header>
					</MenuItem>
					<MenuItem Command="{x:Static hydra:MainWindow.AddToolsCommand}">
						<MenuItem.Header>
							<TextBlock><Run Text="{x:Static loc:LocalizedStrings.XamlStr136}"/>...</TextBlock>
						</MenuItem.Header>
					</MenuItem>
					<Separator/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Exit}" Command="Close"/>
				</MenuItem>

				<MenuItem Header="{x:Static loc:LocalizedStrings.Import}">
					<MenuItem Header="{x:Static loc:LocalizedStrings.Securities}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="Security"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Ticks}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="Trade"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.MarketDepths}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="Depth"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Candles}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="Candle"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.OrderLog}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="OrderLog"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Level1}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="Level1"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.News}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="News"/>
                    <MenuItem Header="{x:Static loc:LocalizedStrings.Transactions}" Command="{x:Static hydra:MainWindow.ImportPaneCommand}" CommandParameter="Execution"/>
				</MenuItem>

				<MenuItem Header="{x:Static loc:LocalizedStrings.Export}">
					<MenuItem Header="{x:Static loc:LocalizedStrings.Securities}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Security"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Ticks}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Trade"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.MarketDepths}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Depth"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Candles}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Candle"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.OrderLog}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="OrderLog"/>
					<MenuItem Header="Level 1" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Level1"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.News}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="News"/>
                    <MenuItem Header="{x:Static loc:LocalizedStrings.Transactions}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Execution"/>
				</MenuItem>

				<MenuItem Header="{x:Static loc:LocalizedStrings.Securities}">
					<MenuItem Header="{x:Static loc:LocalizedStrings.Str2835}" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Security"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Str2892}" Click="GluingData_Click"/>
				</MenuItem>

				<MenuItem Header="{x:Static loc:LocalizedStrings.Str2121}">
					<MenuItem x:Name="Analytics" Header="{x:Static loc:LocalizedStrings.Str1221}" Command="{x:Static hydra:MainWindow.AnalyticsCommand}" />
					<Separator/>
					<MenuItem x:Name="ResetSettings" Header="{x:Static loc:LocalizedStrings.Str1520}" Click="ResetSettings_Click" IsEnabled="{Binding Path=IsStarted, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type hydra:MainWindow}}, Converter={StaticResource BoolToOppositeConverter}}"/>
					<MenuItem x:Name="EraseData" Header="{x:Static loc:LocalizedStrings.XamlStr786}" Click="EraseData_Click" IsEnabled="{Binding Path=IsStarted, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type hydra:MainWindow}}, Converter={StaticResource BoolToOppositeConverter}}"/>
					<Separator/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Str2831}" Command="{x:Static hydra:MainWindow.BoardsCommand}" />
					<MenuItem x:Name="Synchronize" Click="Synchronize_Click" IsEnabled="{Binding Path=IsStarted, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type hydra:MainWindow}}, Converter={StaticResource BoolToOppositeConverter}}">
						<MenuItem.Header>
							<TextBlock><Run Text="{x:Static loc:LocalizedStrings.XamlStr652}" />...</TextBlock>
						</MenuItem.Header>
					</MenuItem>
					<Separator/>
					<MenuItem x:Name="ProxyButton" Click="ProxySettings_Click">
						<MenuItem.Header>
							<TextBlock><Run Text="{x:Static loc:LocalizedStrings.NetworkSettings}" />...</TextBlock>
						</MenuItem.Header>
					</MenuItem>
					<MenuItem x:Name="ServiceButton" Click="Settings_Click">
						<MenuItem.Header>
							<TextBlock><Run Text="{x:Static loc:LocalizedStrings.Settings}" />...</TextBlock>
						</MenuItem.Header>
					</MenuItem>
				</MenuItem>

				<MenuItem Header="{x:Static loc:LocalizedStrings.Help}">
					<MenuItem Header="{x:Static loc:LocalizedStrings.OnlineDoc}" Command="{x:Static hydra:MainWindow.HelpCommand}"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.Str1470}" Name="MnuCheckForUpdates"/>
					<MenuItem Header="{x:Static loc:LocalizedStrings.XamlStr610}" Name="MnuTargetPlatform" Command="{x:Static hydra:MainWindow.TargetPlatformCommand}"/>
					<Separator/>
					<MenuItem Command="{x:Static hydra:MainWindow.AboutCommand}">
						<MenuItem.Header>
							<TextBlock>
								<Run Text="{x:Static loc:LocalizedStrings.About}" />...
							</TextBlock>
						</MenuItem.Header>
					</MenuItem>
				</MenuItem>
			</Menu>

			<DockPanel DockPanel.Dock="Top">
				<ToolBar ToolBarTray.IsLocked="True">
					<ToggleButton x:Name="StartStop" Click="StartStopClick" Width="100" Height="29" Margin="3,0,2,0" Content="{x:Static loc:LocalizedStrings.Str2421}" Style="{StaticResource ToggleButtonStyle}"/>

					<xctk:DropDownButton x:Name="Logs" Width="100" Height="28" Margin="0,2,0,0">
						<xctk:DropDownButton.DropDownContent>
							<Menu Name="LogsMenu">
								<Menu.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel Orientation="Vertical"/>
									</ItemsPanelTemplate>
								</Menu.ItemsPanel>
								<!--<Menu.ItemContainerStyle>
									<Style TargetType="MenuItem">
										<Setter Property="Command" Value="{x:Static hydra:MainWindow.OpenLogCommand}" />
									</Style>
								</Menu.ItemContainerStyle>-->
								<MenuItem Header="{x:Static loc:LocalizedStrings.XamlStr106}" Command="{x:Static hydra:MainWindow.OpenLogCommand}" />
								<!--<MenuItem Header="Ошибки и предупреждения" CommandParameter="error" />
								<MenuItem Header="Все сообщения" CommandParameter="full" />-->
								<MenuItem Header="{x:Static loc:LocalizedStrings.LogDirectory}" Command="{x:Static hydra:MainWindow.LogDirectoryCommand}"/>
								<MenuItem x:Name="MemoryStatMenuItem" Header="{x:Static loc:LocalizedStrings.MemoryStatistics}" IsCheckable="True" Command="{x:Static hydra:MainWindow.MemoryStatisticsCommand}"/>
							</Menu>
						</xctk:DropDownButton.DropDownContent>
						<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
							<ex:BmpImage x:Name="WarnErrorImg" Margin="2" Source="pack://application:,,,/StockSharp.Xaml;component/Images/warning_16x16.png" VerticalAlignment="Center" Visibility="Collapsed" />
							<ex:BmpImage x:Name="LogErrorImg" Margin="2" Source="pack://application:,,,/StockSharp.Xaml;component/Images/error_16x16.png" VerticalAlignment="Center" Visibility="Collapsed" />
							<TextBlock Text="{x:Static loc:LocalizedStrings.Str3237}"/>
						</StackPanel>
					</xctk:DropDownButton>
				</ToolBar>

				<ToolBar ToolBarTray.IsLocked="True">
					<Button Content="{x:Static loc:LocalizedStrings.Ticks}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Trade"/>
					<Button Content="{x:Static loc:LocalizedStrings.MarketDepths}" Width="85" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Depth"/>
					<Button Content="{x:Static loc:LocalizedStrings.Candles}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Candle"/>
					<Button Content="{x:Static loc:LocalizedStrings.OrderLog}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="OrderLog"/>
					<Button Content="{x:Static loc:LocalizedStrings.Level1}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Level1"/>
					<Button Content="{x:Static loc:LocalizedStrings.News}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="News"/>
					<Button Content="{x:Static loc:LocalizedStrings.Transactions}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Execution"/>
				</ToolBar>

				<ToolBar ToolBarTray.IsLocked="True">
					<Button Content="{x:Static loc:LocalizedStrings.Securities}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.OpenPaneCommand}" CommandParameter="Security"/>
					<Button Content="{x:Static loc:LocalizedStrings.Str1221}" Width="80" Height="29" Command="{x:Static hydra:MainWindow.AnalyticsCommand}" />
				</ToolBar>
			
				<controls1:AutomaticUpdater x:Name="AutomaticUpdater" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10" DockPanel.Dock="Right"
										DaysBetweenChecks="0" WaitBeforeCheckSecs="60" UpdateType="OnlyCheck" Animate="True" KeepHidden="False" wyUpdateLocation="Hydra.Update.exe" />
			</DockPanel>

			<StatusBar VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
				<StatusBarItem>
					<TextBlock x:Name="Status" VerticalAlignment="Stretch" />
				</StatusBarItem>
				
				<StatusBarItem Margin="10,0,0,0">
					<sx:AdvertisePanel MaxHeight="300" Height="30" />
				</StatusBarItem>
				
				<StatusBarItem HorizontalAlignment="Right">
					<StackPanel Width="800" Orientation="Horizontal" Margin="5,0,0,0">
						<ex:BmpImage x:Name="LastWarnError" Margin="2" Source="pack://application:,,,/StockSharp.Xaml;component/Images/warning_16x16.png" VerticalAlignment="Center" Visibility="Collapsed" />
						<ex:BmpImage x:Name="LastLogError" Margin="2" Source="pack://application:,,,/StockSharp.Xaml;component/Images/error_16x16.png" VerticalAlignment="Center" Visibility="Collapsed" />
						<Label VerticalContentAlignment="Center" Name="LastLogMessageCtrl" Height="25" ToolTip="{Binding Path=Content, RelativeSource={RelativeSource Self}}">
							<Label.ContextMenu>
								<ContextMenu>
                                    <MenuItem Header="{x:Static loc:LocalizedStrings.XamlStr660}" Command="{x:Static hydra:MainWindow.CopyToBufferCommand}" 
                                              CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
								</ContextMenu>
							</Label.ContextMenu>
						</Label>
					</StackPanel>
				</StatusBarItem>
			</StatusBar>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" MinWidth="40" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<docking:DockSite x:Name="DockSite" Grid.Column="1" Grid.ColumnSpan="2" AreDocumentWindowsDestroyedOnClose="False" CanDocumentWindowsRaft="True" 
								  WindowClosing="DockSite_OnWindowClosing" WindowClosed="DockSite_OnWindowClosed" WindowActivated="DockSite_OnWindowActivated">
					<docking:DockSite.AutoHideBottomContainers>
						<docking:ToolWindowContainer>
							<docking:ToolWindow Title="{x:Static loc:LocalizedStrings.Str3237}" x:Name="LogToolWindow" >
								<sx:Monitor Name="MonitorControl" ShowStrategies="False" />
							</docking:ToolWindow>
						</docking:ToolWindowContainer>
					</docking:DockSite.AutoHideBottomContainers>
					
					<docking:Workspace>
						<docking:TabbedMdiHost>
							<docking:TabbedMdiContainer/>
						</docking:TabbedMdiHost>
					</docking:Workspace>
				</docking:DockSite>
				
				<navigation:NavigationBar Grid.Column="0" IsHeaderVisible="True" Title="S#.Data" ContentWidth="200" x:Name="NavigationBar">
					<navigation:NavigationPane x:Name="SourcesPane" Title="{x:Static loc:LocalizedStrings.XamlStr227}" ImageSourceLarge="/Images/Source32.png" ImageSourceSmall="/Images/Source16.png">
						<DockPanel LastChildFill="True" Margin="3">
							<Button Command="{x:Static hydra:MainWindow.AddSourcesCommand}" DockPanel.Dock="Top" Margin="0,0,0,3">
								<TextBlock><Run Text="{x:Static loc:LocalizedStrings.XamlStr140}"/>...</TextBlock>
							</Button>

							<ListView Name="CurrentSources" ItemContainerStyle="{StaticResource TaskListViewItemStyle}" ItemsSource="{Binding Source={StaticResource SortedSources}}"
									 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" SelectionChanged="CurrentTasks_OnSelectionChanged">
								<ListView.ItemsPanel>
									<ItemsPanelTemplate>
										<views:AnimatedStackPanel>
											<views:AnimatedStackPanel.ArrangeAnimation>
												<views:ArrangeAnimation EnterAnimation="Fade,Translate" LeaveAnimation="Fade,Translate" TranslateEnterPoint="FarRight,None" TranslateLeavePoint="FarRight,None" />
											</views:AnimatedStackPanel.ArrangeAnimation>
										</views:AnimatedStackPanel>
									</ItemsPanelTemplate>
								</ListView.ItemsPanel>
							</ListView>
						</DockPanel>
					</navigation:NavigationPane>

					<navigation:NavigationPane x:Name="ToolsPane" Title="{x:Static loc:LocalizedStrings.XamlStr166}" ImageSourceLarge="/Images/Tasks32.png" ImageSourceSmall="/Images/Tasks16.png">
						<DockPanel LastChildFill="True" Margin="3">
							<Button Command="{x:Static hydra:MainWindow.AddToolsCommand}" DockPanel.Dock="Top" Margin="0,0,0,3">
								<TextBlock><Run Text="{x:Static loc:LocalizedStrings.XamlStr136}"/>...</TextBlock>
							</Button>

							<ListView Name="CurrentTools" ItemContainerStyle="{StaticResource TaskListViewItemStyle}" ItemsSource="{Binding Source={StaticResource SortedTools}}"
									 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
								<ListView.ItemsPanel>
									<ItemsPanelTemplate>
										<views:AnimatedStackPanel>
											<views:AnimatedStackPanel.ArrangeAnimation>
												<views:ArrangeAnimation EnterAnimation="Fade,Translate" LeaveAnimation="Fade,Translate" TranslateEnterPoint="FarRight,None" TranslateLeavePoint="FarRight,None" />
											</views:AnimatedStackPanel.ArrangeAnimation>
										</views:AnimatedStackPanel>
									</ItemsPanelTemplate>
								</ListView.ItemsPanel>
							</ListView>
						</DockPanel>
					</navigation:NavigationPane>
				</navigation:NavigationBar>

				<GridSplitter Grid.Column="1" ResizeDirection="Columns" ResizeBehavior="PreviousAndCurrent" Background="Transparent" Width="5" />
			</Grid>
		</DockPanel>
	</xctk:BusyIndicator>
</Window>