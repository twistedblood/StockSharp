<?xml version="1.0" encoding="utf-8"?>
<topic id="973860e9-8f2d-4035-98de-bb88b33b6751" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para><token>stocksharp</token> предусмотрена возможность построения кривых доходности (эквити) с целью дальнейшего анализа работы торгового робота.
      Данные для кривой получаются с помощью класса 
      <codeEntityReference qualifyHint="false">T:StockSharp.Algo.PnL.PnLManager</codeEntityReference>. Данный класс
      производит рассчет текущего значения, оповещая робота об изменениях через событие 
      <codeEntityReference qualifyHint="true">E:StockSharp.Algo.Strategies.Strategy.PnLChanged</codeEntityReference>.
      </para>
      
      <para>
      	Для расчета параметров кривой (максимальная просадка, коэффициент Шарпа и т.д.) используется 
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.StatisticManager</codeEntityReference>.
      	Эти параметры хранятся в свойстве 
      	<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Statistics.StatisticManager.Parameters</codeEntityReference>.
      	Каждый параметр реализует интерфейсы 
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.IPnLStatisticParameter</codeEntityReference>, 
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.ITradeStatisticParameter</codeEntityReference>,      	
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.IOrderStatisticParameter</codeEntityReference> или
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.IPositionStatisticParameter</codeEntityReference>.
      	Если требуется особый параметр расчета, то необходимо реализовать один из этих интерфейсов и добавить параметр в 
      	<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Statistics.StatisticManager.Parameters</codeEntityReference>.
      </para>
      
      <para>
      	В разделе <link xlink:href="5b90a23e-24b9-474a-a699-da47b666194a">тестирования на истории</link> показано использование
      	<codeEntityReference qualifyHint="true">E:StockSharp.Algo.Strategies.Strategy.PnLChanged</codeEntityReference>
      	применительно к <link xlink:href="2c3a0d3a-6e89-42a1-a158-9a258e0a62e1">торговым стратегиям</link>:
      </para>
      <code language="C#">
_strategy.PnLChanged += () =>
{
	var data = new EquityData
	{
		Time = _strategy.Trader.MarketTime,
		Value = _strategy.PnL,
	};

	this.GuiAsync(() => _curveItems.Add(data));
};      
      </code>
      <para>
      	Менеджер статистики получается через свойство 
      	<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.StatisticManager</codeEntityReference>.
      </para>
      <para>
      	При появлении новых данных, кривая будет отрисовываться на специальном графике <codeEntityReference>T:StockSharp.Xaml.Charting.EquityCurveChart</codeEntityReference>.
      	Чтобы начать рисовать кривую на данном графике, необходимо вызвать метод 
      	<codeEntityReference qualifyHint="true">Overload:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve</codeEntityReference>.
      	Полученная коллекция заполняется данными, которые передаются во время обработки события 
      	<codeEntityReference qualifyHint="true">E:StockSharp.Algo.Strategies.Strategy.PnLChanged</codeEntityReference>.
      </para>
      <para>
      	График <codeEntityReference>T:StockSharp.Xaml.Charting.EquityCurveChart</codeEntityReference> позволяет рисовать одновременно несколько кривых, чтобы иметь
      	возможность их сравнивать по доходности друг с другом. Пример такого подхода показан в разделе <link xlink:href="24a5c734-199f-4090-943d-6324a04f335b">тестирования на истории (оптимизация)</link>.
      </para>
      <para>
      	В разделе <link xlink:href="5b90a23e-24b9-474a-a699-da47b666194a">тестирования на истории</link> показано использование визуальной панели
      	<codeEntityReference qualifyHint="false">T:StockSharp.Xaml.StatisticParameterGrid</codeEntityReference>, которая позволяет отображать параметры 
      	<codeEntityReference qualifyHint="true">P:StockSharp.Xaml.StatisticParameterGrid.Parameters</codeEntityReference>.
      </para>
    </introduction>
   
  </developerWalkthroughDocument>
</topic>