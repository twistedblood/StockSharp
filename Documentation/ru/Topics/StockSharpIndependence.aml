<?xml version="1.0" encoding="utf-8"?>
<topic id="7387c108-01ed-48f2-81f6-653c71d1e628" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
      
    </introduction>

    <prerequisites>
      <content>
        <para>
			<link xlink:href="2c3a0d3a-6e89-42a1-a158-9a258e0a62e1">Торговые стратегии</link>
		</para>
      </content>
    </prerequisites>
    
    <!-- One or more procedure or section elements -->

    <procedure>
		<title>Рекомендации для написания платформо-независимой программы на S#</title>

		<steps class="ordered">
			<step>
				<content>
					<para>
						Разделить код торговли (анализ ситуации на бирже, выставление и отслеживание заявок) и системный код (формы ввода логина-пароля,
						вывода информации по рынку).
					</para>
				</content>
			</step>
			<step>
				<content>
					<para>
						Весь торговый код вынести в стратегию, написанную как показано в разделе <link xlink:href="2c3a0d3a-6e89-42a1-a158-9a258e0a62e1">Торговые стратегии</link>.
					</para>
				</content>
			</step>
			<step>
				<content>
					<para>
						Обращаться к шлюзу торговой системы из кода стратегии только через интерфейс <codeEntityReference>T:StockSharp.BusinessEntities.ITrader</codeEntityReference>.
					</para>
				</content>
			</step>
			<step>
				<content>
					<para>
						Максимально уменьшить количество мест в системном коде, где идет работа с конкретной реализацией шлюза. Например,
						<codeEntityReference>T:StockSharp.Quik.QuikTrader</codeEntityReference>.
					</para>
				</content>
			</step>
			<step>
				<content>
					<para>
						В конечном итоге, стратегия, работающая с несколькими платформами, должна быть построена по такому принципу:
					</para>
					<mediaLink>
						<image placement="center" xlink:href="platformindep" />
					</mediaLink>
				</content>
			</step>
		</steps>
    </procedure>

    <section>
      <title>Демострация миграции</title>

		<content>
			<para>
				Для примера миграции была выбрана программа, описанная в разделе <link xlink:href="2c3a0d3a-6e89-42a1-a158-9a258e0a62e1">Торговые стратегии</link>.
				Это программа реализует торговлю на основе стратегии скользящий средних, но уже для работы под <token>smartcom</token>. Для этого
				было переписано создание шлюза (для <token>smartcom</token> требуется ввод логина и пароля), а так же механизм получения исторических
				данных с разбора текстового файла Финама на непосредственное соединение с сервером истории, описанном в разделе
				<link xlink:href="9d3b0442-0633-4ba5-97e1-22829adcd025"/>. Все эти изменения были сделаны в системном коде, который находится
				в файле <legacyItalic>MainWindow.xaml.cs</legacyItalic>.
			</para>
			<para>
				Так же, в качестве индикатора короткой скользящей используется не <legacyItalic>SMA</legacyItalic>, а <legacyItalic>EMA</legacyItalic>.
				Код стратегии <legacyItalic>SmaStrategy</legacyItalic> остался неизменным. Исходные коды примера лежат в папке SampleSmartSMA.
			</para>
			<para>
				В итоге пример выглядит следующим образом:
			</para>
			<mediaLink>
				<image placement="center" xlink:href="samplesmartsma" />
			</mediaLink>
		</content>
    </section>

    <!--<nextSteps>
      <content>
        <para>
			<link xlink:href="e1d2c02b-ee6e-41ab-93c5-f2286f1fe897">Торговые алгоритмы</link>
		</para>
      </content>
    </nextSteps>-->
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>