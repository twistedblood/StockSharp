<?xml version="1.0" encoding="utf-8"?>
<topic id="1bed8343-9171-49ce-8259-f44007e01a78" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
		<para>
			Для упрощения мониторинга работы можно использовать специальное окно <codeEntityReference>T:StockSharp.Xaml.MonitorWindow</codeEntityReference>:
		</para>
		<para>
			<mediaLink>
				<image placement="center" xlink:href="strategymonitor" />
			</mediaLink>
		</para>
		<para>
			Данное окно позволяет выводить сообщения от всех <codeEntityReference>T:StockSharp.Logging.ILogSource</codeEntityReference>:
		</para>
			<list class="bullet">
			  <listItem>стратегий (<codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference>);</listItem>
			  <listItem>подключений (<codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference>);</listItem>
			  <listItem>собственных реализаций <codeEntityReference>T:StockSharp.Logging.ILogSource</codeEntityReference> (например, главное окно в роботе).</listItem>
			</list>		
		
		<para>
			В виде дерева показывается вложенность источников. Каждая родительская вершина содержит сообщения всех вложенных и так далее, до самого нижнего уровня.
			Для стратегий такая иерархия позволяет увидеть <link xlink:href="8ea639f6-ce74-4a00-9f13-db59c8c2396f">дочерние стратегии</link>.
			Для подключений это также полезно в случае использования <link xlink:href="1cfb4f7c-b9fc-43da-a958-b0e0f881479d">BasketTrader</link>.
			Аналогично, такую же вложенность можно организовать и для собственного робота, реализовав свойство
			<codeEntityReference qualifyHint="true">P:StockSharp.Logging.ILogSource.Parent</codeEntityReference>.
			<!--<codeEntityReference qualifyHint="true">P:StockSharp.Logging.ILogSource.Childs</codeEntityReference>.-->
		</para>
    </introduction>

    <!--<prerequisites>
      <content>
        <para>Optional information on prerequisites</para>
      </content>
    </prerequisites>-->
    
    <!-- One or more procedure or section elements -->

    <procedure>
      <title>Использование MonitorWindow</title>

      <steps class="ordered">
		  <step>
			  <content>
				  <para>Вначале необходимо создать окно:</para>
				  <code language="C#">var monitor = new MonitorWindow();
monitor.Show();</code>
			  </content>
		  </step>
				<step>
					<content>
						<para>Далее, созданное окно необходимо через <codeEntityReference>T:StockSharp.Xaml.GuiLogListener</codeEntityReference> добавить в свой
						<codeEntityReference>T:StockSharp.Logging.LogManager</codeEntityReference>:</para>
						<code language="C#">_logManager.Listeners.Add(new GuiLogListener(monitor));</code>
					</content>
				</step>
		  <step>
			  <content>
				  <para>После этого все источники <codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogManager.Sources</codeEntityReference>
				  (стратегии, подключения и т.д.), будут посылать сообщения в <codeEntityReference>T:StockSharp.Xaml.MonitorWindow</codeEntityReference>.</para>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <!--<section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
      </content>
    </section>

    <nextSteps>
      <content>
        <para>Optional next steps after reading this walk-through</para>
      </content>
    </nextSteps>-->
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>