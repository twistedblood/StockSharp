<?xml version="1.0" encoding="utf-8"?>
<topic id="ad145f75-a2d4-4766-af60-79489b84846c" revisionNumber="0">
 <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

  
  <introduction>
      <para>
		  Для стратегий, которым необходима информация о стакане по инструменту, в <token>stocksharp</token> предусмотрен метод
		  <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Connector.GetMarketDepth(StockSharp.BusinessEntities.Security)</codeEntityReference>.
		  Данный метод возвращает <codeEntityReference>T:StockSharp.BusinessEntities.MarketDepth</codeEntityReference>, который позволяет получить группированно
		  по типу котировки (биды и оффера), а так же удобную работу с лучшими котировками и спредом.
	  </para>
   </introduction> 

    <prerequisites>
      <content>
        <para>
			<link xlink:href="5c13da7b-b6e4-4fd4-958a-66c93c58b941">Настройка Quik</link>
		</para>
      </content>
    </prerequisites>
    

    <procedure>
      <title>Шаги настройки экспорта стакана</title>

      <steps class="ordered">
		  <step>
			  <content>
				  <para>
					  Для того, чтобы метод <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Connector.GetMarketDepth(StockSharp.BusinessEntities.Security)</codeEntityReference>
					  работал и в классе <codeEntityReference>T:StockSharp.Quik.QuikTrader</codeEntityReference>, необходимо в начале настроить экспорт стакана в
					  <token>quik</token>-е, как показано на рисунке:
				  </para>
				  <alert class="note">
					  Если стакан для необходимого инструмента еще ни разу не окрывался в <token>quik</token>-е, то <codeEntityReference>T:StockSharp.Quik.QuikTrader</codeEntityReference>
					  самостоятельно создаст окно в терминале и настроит его при вызове метода 
					  <codeEntityReference qualifyHint="false" autoUpgrade="true">M:StockSharp.BusinessEntities.IConnector.RegisterMarketDepth(StockSharp.BusinessEntities.Security)</codeEntityReference>
					  из кода программы. Или можно принудительно закрыть стакан в <token>quik</token>-е и он будет переоткрыт с уже корректными для <token>stocksharp</token>
					  настройками.
				  </alert>
				  <alert class="caution">
					  Если в таблице "Инструменты" включена сортировка по одному из столбцов, то при автоматическом открытии стакана методом 
					  <codeEntityReference qualifyHint="false" autoUpgrade="true">M:StockSharp.BusinessEntities.IConnector.RegisterMarketDepth(StockSharp.BusinessEntities.Security)</codeEntityReference>, 
					  любая сортировка будет отменена.
				  </alert>
				  <para>
					  <mediaLink>
						  <image placement="center" xlink:href="quotes" />
					  </mediaLink>
				  </para>
				  <para>
					  Заголовок окна должен содержать через @ код и класс инструмента, по которому в <codeEntityReference>T:StockSharp.Quik.QuikTrader</codeEntityReference>
					  будет происходить сопоставление объекта <codeEntityReference>T:StockSharp.BusinessEntities.Security</codeEntityReference> и стакана.
					  Например, для Лукойла заголовок будет <legacyBold>LKOH@QJSIM</legacyBold> на демо счете, и <legacyBold>LKOH@EQBR</legacyBold> на реальном.
					  Для инструментов <token>rts</token> класс инструмента будет равен RTS. Стакан для июньского фьючерса на индекс РТС, к примеру, будет иметь
					  заголовок <legacyBold>RIM5@FORTS</legacyBold>. Подробнее, в разделе <link xlink:href="34a9c518-60ca-45c0-a118-5e2e42165efa">Идентификатор инструмента</link>.
				  </para>
				  <alert class="caution">
					  Если код инструмента содержит символ @, то рекомендуется поменять разделитель на другой символ через свойство
					  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.SecurityIdGenerator.Delimiter</codeEntityReference>
					  у <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Connector.SecurityIdGenerator</codeEntityReference>.
				  </alert>
			  </content>
		  </step> 
		  <step>
			  <content>
				  <para>
					  После настройки стакана, он будет доступен для экспорта. Для того, чтобы начать получать данные по <token>dde</token> из стакана в программу
					  необходимо вызвать метод <codeEntityReference qualifyHint="false" autoUpgrade="true">M:StockSharp.BusinessEntities.IConnector.RegisterMarketDepth(StockSharp.BusinessEntities.Security)</codeEntityReference>:
			 	  </para>
					  <code language="C#">trader.RegisterMarketDepth(lkoh);</code>
			  </content>
		  </step> 
		  <step>
			  <content>
				  <para> Пример работы со стаканом: </para>
					  <code language="C#">
					  	foreach (var qoute in trader.GetMarketDepth(lkoh))
							{
								Console.WriteLine("Направление {0} Объем {1} Цена {2}", qoute.OrderDirection, qoute.Volume, qoute.Price);
							}
					 </code>
			  </content>
		  </step>
		  
		  <step>
			  <content>
				  <para> Остановка экспорта стакана по <token>dde</token>: </para>
				  <code language="C#">trader.UnRegisterQuotes(lkoh);</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Для увеличения скорости передачи данных по <token>dde</token> для стакана рекомендуется прописать в файл <localUri>info.ini</localUri>
					  следующие параметры:
				  </para>	  
					  <code language="C#">
					  	<![CDATA[[excel] price-timeout=10]]>
					  </code>
			  </content>
		  </step>
      </steps>
    </procedure> 
    
    <relatedTopics>
		<link xlink:href="4261879e-9bb3-482c-9fc5-27ecb07bdf5e">Экспорт дополнительных параметров</link>
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>