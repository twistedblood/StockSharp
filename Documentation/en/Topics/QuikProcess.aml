<?xml version="1.0" encoding="utf-8"?>
<topic id="52cb16e3-0ff0-4e82-8ad5-73a2e6e918a1" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

	  <introduction>
		  <para>
			  Для включения (с автоматической авторизацией) и выключения терминала <token>quik</token> предоставляется
			  <codeEntityReference>T:StockSharp.Quik.QuikTerminal</codeEntityReference>. Подобный сценарий может потребоваться, если необходимо
			  на ночь выключать терминал, или в случае восстановления соединения (подробнее, в
			  <link xlink:href="a188710e-7bb7-41b3-8119-6088f2bf1780" />), когда оно было потеряно из-за закрытия <token>quik</token>
			  (в нем произошла ошибка).
		  </para>
	  </introduction>

    <!--<prerequisites>
      <content>
        <para><link xlink:href="52cb16e3-0ff0-4e82-8ad5-73a2e6e918a1">Включение и выключение Quik</link></para>
      </content>
    </prerequisites>-->
    
    <!-- One or more procedure or section elements -->

    <procedure>
      <title>
		  Варианты использования:
	  </title>

      <steps class="ordered">
		  <step>
			  <content>
				  <para>
					  Включение <token>quik</token> (с проверкой, запущен ли уже через свойство <codeEntityReference qualifyHint="true">M:StockSharp.Quik.QuikTerminal.GetTerminals(System.Boolean)</codeEntityReference>):
				  </para>
				  <code language="C#">Console.Write("Введите путь к директории с Quik: ");
var path = Console.ReadLine();

var terminal = QuikTerminal.Get(path);

if (!terminal.IsLaunched)
{
	Console.WriteLine("Запускается Quik...");

	terminal.Launch();
	Console.WriteLine("Quik запущен.");
}
else
	Console.WriteLine("Quik найден.");</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  После включения <token>quik</token> (запустится его процесс), можно производить авторизацию к серверу брокера через метод
					  <codeEntityReference>M:StockSharp.Quik.QuikTerminal.Login(System.String,System.String,System.Net.IPEndPoint)</codeEntityReference>:
				  </para>
				  <code language="C#"><![CDATA[Console.Write("Введите логин: ");
var login = Console.ReadLine();

Console.Write("Введите пароль: ");
var password = Console.ReadLine();

if (!terminal.IsConnected)
{
	terminal.Login(login, password);
	Console.WriteLine("Авторизация произведена.");
}]]></code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Для выключения <token>quik</token> (например, по окончанию работы робота), делается следующее:
				  </para>
				  <code language="C#">terminal.Logout();
Console.WriteLine("Quik отключен от торговли.");

terminal.Exit();
Console.WriteLine("Quik выключен.");</code>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <!--<section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
      </content>
    </section>-->

    <nextSteps>
      <content>
        <para>
			<link xlink:href="a616c5a8-227a-4fe9-869c-d32af3e62710">Управление окном Quik</link>
		</para>
      </content>
    </nextSteps>
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>