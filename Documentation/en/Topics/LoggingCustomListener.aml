<?xml version="1.0" encoding="utf-8"?>
<topic id="a711d06d-9d1d-40b8-89bf-ee62d817a878" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      	<para>
      		Если необходимо создать свою реализацию <codeEntityReference>T:StockSharp.Logging.ILogListener</codeEntityReference> (например, когда
      		требуется сохранять сообщения в базе данных), то можно или отнаследоваться от класса <codeEntityReference>T:StockSharp.Logging.LogListener</codeEntityReference>
      		или напрямую реализовать интерфейс <codeEntityReference>T:StockSharp.Logging.ILogListener</codeEntityReference>. Через метод
			<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Logging.ILogListener.WriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})</codeEntityReference>
			передается объект класса <codeEntityReference>T:StockSharp.Logging.LogMessage</codeEntityReference>. Данный класс содержит информацию об
			источнике сообщения <codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogMessage.Source</codeEntityReference> (например, стратегия,
			которая сгенерировала сообщение), тип сообщения	<codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogMessage.Level</codeEntityReference>
			(информация, предупреждение или ошибка), а также сам текст	<codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogMessage.Message</codeEntityReference>.
			Ниже в качестве примера приведен код класс <codeEntityReference>T:StockSharp.Logging.EmailLogListener</codeEntityReference>:
		</para>
		<code language="C#"><![CDATA[/// <summary>
/// Логгер, отсылающий данные на email. 
/// </summary>
public class EmailLogListener : LogListener
{
	/// <summary>
	/// Создать <see cref="EmailLogListener"/>.
	/// </summary>
	/// <param name="from">Адрес, от имени которого будет отправлено сообщение.</param>
	/// <param name="to">Адрес, куда будет отправлено сообщение.</param>
	public EmailLogListener(string from, string to)
	{
		if (from.IsEmpty())
			throw new ArgumentNullException("from");

		if (to.IsEmpty())
			throw new ArgumentNullException("to");

		From = from;
		To = to;
	}

	/// <summary>
	/// Адрес, от имени которого будет отправлено сообщение.
	/// </summary>
	public string From { get; private set; }

	/// <summary>
	/// Адрес, куда будет отправлено сообщение.
	/// </summary>
	public string To { get; private set; }

	/// <summary>
	/// Записать сообщение.
	/// </summary>
	/// <param name="message">Отладочное сообщение.</param>
	protected override void OnWriteMessage(LogMessage message)
	{
		var email = new SmtpClient();
		email.Send(new MailMessage(From, To, message.Source.Name + " " + message.Level, message.Message));
	}
}]]></code>
    </introduction>
    <!-- <prerequisites><content>Optional prerequisites info</content></prerequisites> -->
    <!-- One or more procedure or section with procedure -->
    <!--procedure>
      <title>Procedure title</title>
      <steps class="ordered">
        <step>
          <content>
            <para>First step</para>
          </content>
        </step>
        <step>
          <content>
            <para>Second step</para>
          </content>
        </step>
      </steps>
    </procedure-->
    <!-- Optional additional procedure or section with procedure -->
    
    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>