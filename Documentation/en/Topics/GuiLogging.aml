<?xml version="1.0" encoding="utf-8"?>
<topic id="4cd2b7f9-fe8d-404a-bec6-227783410beb" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para><token>stocksharp</token> предлагает несколько графических компонет для отображения логов, в основе которых лежит
      <codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference>. Другие компоненты: 
      <codeEntityReference>T:StockSharp.Xaml.LogWindow</codeEntityReference>,
      <codeEntityReference>T:StockSharp.Xaml.Monitor</codeEntityReference> и 
      <codeEntityReference>T:StockSharp.Xaml.MonitorWindow</codeEntityReference> только дополняют функциональность 
      <codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference>.
      </para>
      <para>При использовании визуальных компонентов логирования в качестве "слушателя" необходимо использовать логгер
      <codeEntityReference>T:StockSharp.Xaml.GuiLogListener</codeEntityReference>. Этот логгер обеспечивает потоковую синхронизацию с GUI при записи новых сообщений
      <codeEntityReference>T:StockSharp.Logging.LogMessage</codeEntityReference>.</para>
    </introduction>
  <section>
     <sections>
          <section address="SubSection1">
              <title>LogControl</title>
              <content>
              <mediaLink><image placement="left" xlink:href="GUI_LogControl" /></mediaLink>	
                  <para><codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference> - таблица для отображения сообщений логов.
                  Кнопки панели инструментов позволяют фильтровать сообщения с разным уровнем логирования.</para>
                  <para><legacyUnderline>Пример кода</legacyUnderline></para>
                   <code title="XAML" language="XAML">
	  				<![CDATA[
<Window x:Class="LoggingControls.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sx="clr-namespace:StockSharp.Xaml;assembly=StockSharp.Xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <sx:LogControl x:Name="LogControl"/>
    </Grid>
</Window>
	  				]]>
                  </code>
                  <code title="C#" language="C#">
// Создаем LogManager
LogManager _logManager = new LogManager();

// Добавляем источник логов. Используем систему трассировки .NET.
_logManager.Sources.Add(new StockSharp.Logging.TraceSource());

// Добавляем "слушателя" логов - GuiLogListener, в конструктор которого передаем ссылку
// на графический элемент.
_logManager.Listeners.Add(new GuiLogListener(LogControl));
..........................                  
// При использовании в качестве источника TraceSource, отладочные сообщения можно добавлять следующим образом:
Trace.TraceInformation("Info  test message");
Trace.TraceWarning("Warning test message");
Trace.TraceError("Error test message");
                  </code>
              </content>
          </section>
          <section address="SubSection2">
              <title>Monitor</title>
              <content>
              	<mediaLink><image placement="left" xlink:href="GUI_Monitor" /></mediaLink>
                <para><codeEntityReference>T:StockSharp.Xaml.Monitor</codeEntityReference> - визуальный элемент, где 
                	<codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference> используется вместе с иерархическим деревом <legacyBold>TreeView</legacyBold>, 
                	в котором отображаются источники логов. Изначально компонент предназначался для мониторинга торговых стратегий. Поэтому по умолчанию
                	в "дереве" присутствует узел <legacyBold>Стратегии</legacyBold>. В тоже время с этим компонетом могут использоваться и другие источники.
                </para>
                <para><legacyUnderline>Пример кода</legacyUnderline></para>
                <code title="XAML" language="XAML">
				<![CDATA[
<Window x:Class="LoggingControls.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sx="clr-namespace:StockSharp.Xaml;assembly=StockSharp.Xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <sx:Monitor x:Name="Monitor" />
    </Grid>
</Window>
				]]>
                  </code>
                  <code title="C#" language="C#">
// Создаем LogManager
LogManager _logManager = new LogManager();

// Добавляем источник логов. Используем систему трассировки .NET.
// При работе со стратегиями, добавьте аналогичным образом объект стратегии
_logManager.Sources.Add(new StockSharp.Logging.TraceSource());

// Добавляем "слушателя" логов - GuiLogListener, в конструктор которого передаем ссылку
// на графический элемент.
_logManager.Listeners.Add(new GuiLogListener(Monitor));
                  </code>
              </content>
          </section>
          <section address="SubSection3">
              <title>LogWindow</title>
              <content>
                  <para><codeEntityReference>T:StockSharp.Xaml.LogWindow</codeEntityReference> - визуальный компонент, где 
                  <codeEntityReference>T:StockSharp.Xaml.LogControl</codeEntityReference> отображается в отдельном окне.
                  </para>
                  <para><legacyUnderline>Пример кода</legacyUnderline></para>
                  <code title="C#" language="C#">
// Создаем LogManager
LogManager _logManager = new LogManager();

// Добавляем источник логов. Используем систему трассировки .NET.
_logManager.Sources.Add(new StockSharp.Logging.TraceSource());

// Создаем экземпляр окна LogWindow
 LogWindow _logWindow = new LogWindow();
 
 // Добавляем "слушателя" логов - GuiLogListener, в конструктор которого передаем ссылку
// на графический элемент.
_logManager.Listeners.Add(new GuiLogListener(_logWindow));

//  Показываем окно
_logWindow.Show();
                  </code>

                  
              </content>
          </section>
          <section address="SubSection4">
              <title>MonitorWindow</title>
              <content>
                  <para><codeEntityReference>T:StockSharp.Xaml.MonitorWindow</codeEntityReference> - визуальный компонент, где 
                  <codeEntityReference>T:StockSharp.Xaml.Monitor</codeEntityReference> отображается в отдельном окне.
                  </para>
                  <para><legacyUnderline>Пример кода</legacyUnderline></para>
                  <code title="C#" language="C#">
// Создаем LogManager
LogManager _logManager = new LogManager();

// Добавляем источник логов. Используем систему трассировки .NET.
_logManager.Sources.Add(new StockSharp.Logging.TraceSource());

// Создаем экземпляр окна MonitorWindow
 MonitorWindow _monitorWindow = new MonitorWindow();
 
 // Добавляем "слушателя" логов - GuiLogListener, в конструктор которого передаем ссылку
// на графический элемент.
_logManager.Listeners.Add(new GuiLogListener(_monitorWindow));

//  Показываем окно
__monitorWindow.Show();
                  </code>
              </content>
          </section>

      </sections>
</section>
    
    <relatedTopics>
       <link xlink:href="82437493-cd53-41eb-b756-d913af0f4f8e">Логирование</link>
    </relatedTopics>
  </developerConceptualDocument>
</topic>